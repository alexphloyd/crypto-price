{
  "name": "db",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "libs/db/src",
  "projectType": "library",
  "targets": {
    "build": {
      "executor": "@nx/js:tsc",
      "outputs": ["{options.outputPath}"],
      "options": {
        "outputPath": "dist/libs/db",
        "main": "libs/db/src/index.ts",
        "tsConfig": "libs/db/tsconfig.lib.json",
        "assets": ["libs/db/*.md"]
      }
    },
    "lint": {
      "executor": "@nx/linter:eslint",
      "outputs": ["{options.outputFile}"],
      "options": {
        "lintFilePatterns": ["libs/db/**/*.ts", "libs/db/package.json"]
      }
    },
    "prisma:inline": {
      "executor": "nx:run-commands",
      "options": {
        "command": "cp node_modules/.prisma/client/*.js node_modules/@prisma/client"
      }
    },
    "prisma:migrate": {
      "executor": "nx:run-commands",
      "options": {
        "command": "npx prisma migrate deploy && npx nx prisma:inline db"
      }
    },
    "prisma:migrate:dev": {
      "executor": "nx:run-commands",
      "options": {
        "command": "npx prisma migrate dev && npx nx prisma:inline db"
      }
    },
    "prisma:generate": {
      "executor": "nx:run-commands",
      "options": {
        "command": "npx prisma generate && npx nx prisma:inline db"
      }
    }
  },
  "tags": []
}



